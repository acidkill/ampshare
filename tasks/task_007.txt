# Task ID: 7
# Title: Implement Lazy Loading for Non-Critical Components
# Status: pending
# Dependencies: 3
# Priority: medium
# Description: Implement lazy loading for non-critical web components to improve initial load performance.
# Details:
Modify the web component registration system to support lazy loading:

1. Create a mechanism to load components on demand
2. Implement dynamic imports for non-critical components
3. Add intersection observer to load components when they become visible

```typescript
// web-components/lazy-registry.ts
import { registerWebComponent } from './registry';

const loadedComponents = new Set<string>();

export function lazyLoadComponent(name: string, importFn: () => Promise<any>) {
  if (loadedComponents.has(name)) return Promise.resolve();
  
  return importFn().then(module => {
    const constructor = module.default || module[name];
    if (constructor) {
      registerWebComponent(name, constructor);
      loadedComponents.add(name);
    }
    return constructor;
  }).catch(error => {
    console.error(`Failed to lazy load component ${name}:`, error);
    return null;
  });
}

// Usage example
export function setupLazyComponents() {
  // Set up intersection observer for elements that need lazy loading
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const element = entry.target;
        const componentName = element.getAttribute('data-component');
        if (componentName === 'mce-autosize-textarea') {
          lazyLoadComponent('mce-autosize-textarea', () => import('./autosize-textarea'));
        }
        // Unobserve after loading
        observer.unobserve(element);
      }
    });
  });
  
  // Observe elements that should trigger lazy loading
  document.querySelectorAll('[data-component]').forEach(el => {
    observer.observe(el);
  });
}
```

# Test Strategy:
1. Test that components load correctly when they become visible
2. Verify initial page load time improves with lazy loading
3. Test error handling when component loading fails
4. Verify components work correctly after being lazy loaded
