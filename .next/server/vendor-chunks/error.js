"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/error";
exports.ids = ["vendor-chunks/error"];
exports.modules = {

/***/ "(action-browser)/./node_modules/error/typed.js":
/*!*************************************!*\
  !*** ./node_modules/error/typed.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar template = __webpack_require__(/*! string-template */ \"(action-browser)/./node_modules/string-template/index.js\");\nvar extend = __webpack_require__(/*! xtend/mutable */ \"(action-browser)/./node_modules/xtend/mutable.js\");\nvar assert = __webpack_require__(/*! assert */ \"assert\");\n\nvar isWordBoundary = /[_.-](\\w|$)/g;\n\nmodule.exports = TypedError;\n\nfunction TypedError(args) {\n    assert(args, 'TypedError: must specify options');\n    assert(args.type, 'TypedError: must specify options.type');\n    assert(args.message, 'TypedError: must specify options.message');\n\n    assert(!has(args, 'fullType'),\n        'TypedError: fullType field is reserved');\n\n    var message = args.message;\n    if (args.type && !args.name) {\n        var errorName = camelCase(args.type) + 'Error';\n        args.name = errorName[0].toUpperCase() + errorName.substr(1);\n    }\n\n    extend(createError, args);\n    createError._name = args.name;\n\n    return createError;\n\n    function createError(opts) {\n        var result = new Error();\n\n        Object.defineProperty(result, 'type', {\n            value: result.type,\n            enumerable: true,\n            writable: true,\n            configurable: true\n        });\n\n        var options = extend({}, args, opts);\n        if (!options.fullType) {\n            options.fullType = options.type;\n        }\n\n        extend(result, options);\n        if (opts && opts.message) {\n            result.message = template(opts.message, options);\n        } else if (message) {\n            result.message = template(message, options);\n        }\n\n        return result;\n    }\n}\n\nfunction camelCase(str) {\n    return str.replace(isWordBoundary, upperCase);\n}\n\nfunction upperCase(_, x) {\n    return x.toUpperCase();\n}\n\nfunction has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9lcnJvci90eXBlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixlQUFlLG1CQUFPLENBQUMsaUZBQWlCO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQyx1RUFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsc0JBQVE7O0FBRTdCOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3Byb2plY3Qvbm9kZV9tb2R1bGVzL2Vycm9yL3R5cGVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHRlbXBsYXRlID0gcmVxdWlyZSgnc3RyaW5nLXRlbXBsYXRlJyk7XG52YXIgZXh0ZW5kID0gcmVxdWlyZSgneHRlbmQvbXV0YWJsZScpO1xudmFyIGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuXG52YXIgaXNXb3JkQm91bmRhcnkgPSAvW18uLV0oXFx3fCQpL2c7XG5cbm1vZHVsZS5leHBvcnRzID0gVHlwZWRFcnJvcjtcblxuZnVuY3Rpb24gVHlwZWRFcnJvcihhcmdzKSB7XG4gICAgYXNzZXJ0KGFyZ3MsICdUeXBlZEVycm9yOiBtdXN0IHNwZWNpZnkgb3B0aW9ucycpO1xuICAgIGFzc2VydChhcmdzLnR5cGUsICdUeXBlZEVycm9yOiBtdXN0IHNwZWNpZnkgb3B0aW9ucy50eXBlJyk7XG4gICAgYXNzZXJ0KGFyZ3MubWVzc2FnZSwgJ1R5cGVkRXJyb3I6IG11c3Qgc3BlY2lmeSBvcHRpb25zLm1lc3NhZ2UnKTtcblxuICAgIGFzc2VydCghaGFzKGFyZ3MsICdmdWxsVHlwZScpLFxuICAgICAgICAnVHlwZWRFcnJvcjogZnVsbFR5cGUgZmllbGQgaXMgcmVzZXJ2ZWQnKTtcblxuICAgIHZhciBtZXNzYWdlID0gYXJncy5tZXNzYWdlO1xuICAgIGlmIChhcmdzLnR5cGUgJiYgIWFyZ3MubmFtZSkge1xuICAgICAgICB2YXIgZXJyb3JOYW1lID0gY2FtZWxDYXNlKGFyZ3MudHlwZSkgKyAnRXJyb3InO1xuICAgICAgICBhcmdzLm5hbWUgPSBlcnJvck5hbWVbMF0udG9VcHBlckNhc2UoKSArIGVycm9yTmFtZS5zdWJzdHIoMSk7XG4gICAgfVxuXG4gICAgZXh0ZW5kKGNyZWF0ZUVycm9yLCBhcmdzKTtcbiAgICBjcmVhdGVFcnJvci5fbmFtZSA9IGFyZ3MubmFtZTtcblxuICAgIHJldHVybiBjcmVhdGVFcnJvcjtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUVycm9yKG9wdHMpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IG5ldyBFcnJvcigpO1xuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXN1bHQsICd0eXBlJywge1xuICAgICAgICAgICAgdmFsdWU6IHJlc3VsdC50eXBlLFxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHZhciBvcHRpb25zID0gZXh0ZW5kKHt9LCBhcmdzLCBvcHRzKTtcbiAgICAgICAgaWYgKCFvcHRpb25zLmZ1bGxUeXBlKSB7XG4gICAgICAgICAgICBvcHRpb25zLmZ1bGxUeXBlID0gb3B0aW9ucy50eXBlO1xuICAgICAgICB9XG5cbiAgICAgICAgZXh0ZW5kKHJlc3VsdCwgb3B0aW9ucyk7XG4gICAgICAgIGlmIChvcHRzICYmIG9wdHMubWVzc2FnZSkge1xuICAgICAgICAgICAgcmVzdWx0Lm1lc3NhZ2UgPSB0ZW1wbGF0ZShvcHRzLm1lc3NhZ2UsIG9wdGlvbnMpO1xuICAgICAgICB9IGVsc2UgaWYgKG1lc3NhZ2UpIHtcbiAgICAgICAgICAgIHJlc3VsdC5tZXNzYWdlID0gdGVtcGxhdGUobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuZnVuY3Rpb24gY2FtZWxDYXNlKHN0cikge1xuICAgIHJldHVybiBzdHIucmVwbGFjZShpc1dvcmRCb3VuZGFyeSwgdXBwZXJDYXNlKTtcbn1cblxuZnVuY3Rpb24gdXBwZXJDYXNlKF8sIHgpIHtcbiAgICByZXR1cm4geC50b1VwcGVyQ2FzZSgpO1xufVxuXG5mdW5jdGlvbiBoYXMob2JqLCBrZXkpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/error/typed.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/error/wrapped.js":
/*!***************************************!*\
  !*** ./node_modules/error/wrapped.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar extend = __webpack_require__(/*! xtend/mutable */ \"(action-browser)/./node_modules/xtend/mutable.js\");\nvar assert = __webpack_require__(/*! assert */ \"assert\");\n\nvar TypedError = __webpack_require__(/*! ./typed.js */ \"(action-browser)/./node_modules/error/typed.js\");\n\nvar objectToString = Object.prototype.toString;\nvar ERROR_TYPE = '[object Error]';\nvar causeMessageRegex = /\\{causeMessage\\}/g;\nvar origMessageRegex = /\\{origMessage\\}/g;\n\nmodule.exports = WrappedError;\n\nfunction WrappedError(options) {\n    assert(options, 'WrappedError: must specify options');\n    assert(options.type, 'WrappedError: must specify type');\n    assert(options.message, 'WrappedError: must specify message');\n\n    assert(!has(options, 'cause'),\n        'WrappedError: cause field is reserved');\n    assert(!has(options, 'fullType'),\n        'WrappedError: fullType field is reserved');\n    assert(!has(options, 'causeMessage'),\n        'WrappedError: causeMessage field is reserved');\n    assert(!has(options, 'origMessage'),\n        'WrappedError: origMessage field is reserved');\n\n    var createTypedError = TypedError(options);\n    extend(createError, options);\n    createError._name = options.name;\n\n    return createError;\n\n    function createError(cause, opts) {\n        /*eslint max-statements: [2, 25]*/\n        assert(cause, 'an error is required');\n        assert(isError(cause),\n            'WrappedError: first argument must be an error');\n\n        var causeMessage = cause.message;\n        if (causeMessage.indexOf('{causeMessage}') >= 0) {\n            // recover\n            causeMessage = causeMessage.replace(\n                causeMessageRegex,\n                '$INVALID_CAUSE_MESSAGE_LITERAL'\n            );\n        }\n        if (causeMessage.indexOf('{origMessage}') >= 0) {\n            causeMessage = causeMessage.replace(\n                origMessageRegex,\n                '$INVALID_ORIG_MESSAGE_LITERAL'\n            );\n        }\n\n        var nodeCause = false;\n        var errOptions = extend({}, opts, {\n            causeMessage: causeMessage,\n            origMessage: causeMessage\n        });\n\n        if (has(cause, 'code') && !has(errOptions, 'code')) {\n            errOptions.code = cause.code;\n        }\n\n        if (has(cause, 'errno') && !has(errOptions, 'errno')) {\n            errOptions.errno = cause.errno;\n            nodeCause = true;\n        }\n\n        if (has(cause, 'syscall') && !has(errOptions, 'syscall')) {\n            errOptions.syscall = cause.syscall;\n            nodeCause = true;\n        }\n\n        var causeType = cause.type;\n        if (!causeType && nodeCause) {\n            causeType = 'error.wrapped-io.' +\n                (cause.syscall || 'unknown') + '.' +\n                (cause.errno || 'unknown');\n        } else {\n            causeType = 'error.wrapped-unknown';\n        }\n\n        errOptions.fullType = options.type + '~!~' +\n            (cause.fullType || cause.type || causeType);\n\n        var err = createTypedError(errOptions);\n\n        Object.defineProperty(err, 'cause', {\n            value: cause,\n            configurable: true,\n            enumerable: false\n        });\n        return err;\n    }\n}\n\nfunction has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction isError(err) {\n    return objectToString.call(err) === ERROR_TYPE;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9lcnJvci93cmFwcGVkLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQyx1RUFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsc0JBQVE7O0FBRTdCLGlCQUFpQixtQkFBTyxDQUFDLGtFQUFZOztBQUVyQztBQUNBO0FBQ0EsMkJBQTJCLGNBQWM7QUFDekMsMEJBQTBCLGFBQWE7O0FBRXZDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQ0FBbUMsYUFBYTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsWUFBWTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL2hvbWUvcHJvamVjdC9ub2RlX21vZHVsZXMvZXJyb3Ivd3JhcHBlZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBleHRlbmQgPSByZXF1aXJlKCd4dGVuZC9tdXRhYmxlJyk7XG52YXIgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5cbnZhciBUeXBlZEVycm9yID0gcmVxdWlyZSgnLi90eXBlZC5qcycpO1xuXG52YXIgb2JqZWN0VG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIEVSUk9SX1RZUEUgPSAnW29iamVjdCBFcnJvcl0nO1xudmFyIGNhdXNlTWVzc2FnZVJlZ2V4ID0gL1xce2NhdXNlTWVzc2FnZVxcfS9nO1xudmFyIG9yaWdNZXNzYWdlUmVnZXggPSAvXFx7b3JpZ01lc3NhZ2VcXH0vZztcblxubW9kdWxlLmV4cG9ydHMgPSBXcmFwcGVkRXJyb3I7XG5cbmZ1bmN0aW9uIFdyYXBwZWRFcnJvcihvcHRpb25zKSB7XG4gICAgYXNzZXJ0KG9wdGlvbnMsICdXcmFwcGVkRXJyb3I6IG11c3Qgc3BlY2lmeSBvcHRpb25zJyk7XG4gICAgYXNzZXJ0KG9wdGlvbnMudHlwZSwgJ1dyYXBwZWRFcnJvcjogbXVzdCBzcGVjaWZ5IHR5cGUnKTtcbiAgICBhc3NlcnQob3B0aW9ucy5tZXNzYWdlLCAnV3JhcHBlZEVycm9yOiBtdXN0IHNwZWNpZnkgbWVzc2FnZScpO1xuXG4gICAgYXNzZXJ0KCFoYXMob3B0aW9ucywgJ2NhdXNlJyksXG4gICAgICAgICdXcmFwcGVkRXJyb3I6IGNhdXNlIGZpZWxkIGlzIHJlc2VydmVkJyk7XG4gICAgYXNzZXJ0KCFoYXMob3B0aW9ucywgJ2Z1bGxUeXBlJyksXG4gICAgICAgICdXcmFwcGVkRXJyb3I6IGZ1bGxUeXBlIGZpZWxkIGlzIHJlc2VydmVkJyk7XG4gICAgYXNzZXJ0KCFoYXMob3B0aW9ucywgJ2NhdXNlTWVzc2FnZScpLFxuICAgICAgICAnV3JhcHBlZEVycm9yOiBjYXVzZU1lc3NhZ2UgZmllbGQgaXMgcmVzZXJ2ZWQnKTtcbiAgICBhc3NlcnQoIWhhcyhvcHRpb25zLCAnb3JpZ01lc3NhZ2UnKSxcbiAgICAgICAgJ1dyYXBwZWRFcnJvcjogb3JpZ01lc3NhZ2UgZmllbGQgaXMgcmVzZXJ2ZWQnKTtcblxuICAgIHZhciBjcmVhdGVUeXBlZEVycm9yID0gVHlwZWRFcnJvcihvcHRpb25zKTtcbiAgICBleHRlbmQoY3JlYXRlRXJyb3IsIG9wdGlvbnMpO1xuICAgIGNyZWF0ZUVycm9yLl9uYW1lID0gb3B0aW9ucy5uYW1lO1xuXG4gICAgcmV0dXJuIGNyZWF0ZUVycm9yO1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlRXJyb3IoY2F1c2UsIG9wdHMpIHtcbiAgICAgICAgLyplc2xpbnQgbWF4LXN0YXRlbWVudHM6IFsyLCAyNV0qL1xuICAgICAgICBhc3NlcnQoY2F1c2UsICdhbiBlcnJvciBpcyByZXF1aXJlZCcpO1xuICAgICAgICBhc3NlcnQoaXNFcnJvcihjYXVzZSksXG4gICAgICAgICAgICAnV3JhcHBlZEVycm9yOiBmaXJzdCBhcmd1bWVudCBtdXN0IGJlIGFuIGVycm9yJyk7XG5cbiAgICAgICAgdmFyIGNhdXNlTWVzc2FnZSA9IGNhdXNlLm1lc3NhZ2U7XG4gICAgICAgIGlmIChjYXVzZU1lc3NhZ2UuaW5kZXhPZigne2NhdXNlTWVzc2FnZX0nKSA+PSAwKSB7XG4gICAgICAgICAgICAvLyByZWNvdmVyXG4gICAgICAgICAgICBjYXVzZU1lc3NhZ2UgPSBjYXVzZU1lc3NhZ2UucmVwbGFjZShcbiAgICAgICAgICAgICAgICBjYXVzZU1lc3NhZ2VSZWdleCxcbiAgICAgICAgICAgICAgICAnJElOVkFMSURfQ0FVU0VfTUVTU0FHRV9MSVRFUkFMJ1xuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoY2F1c2VNZXNzYWdlLmluZGV4T2YoJ3tvcmlnTWVzc2FnZX0nKSA+PSAwKSB7XG4gICAgICAgICAgICBjYXVzZU1lc3NhZ2UgPSBjYXVzZU1lc3NhZ2UucmVwbGFjZShcbiAgICAgICAgICAgICAgICBvcmlnTWVzc2FnZVJlZ2V4LFxuICAgICAgICAgICAgICAgICckSU5WQUxJRF9PUklHX01FU1NBR0VfTElURVJBTCdcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgbm9kZUNhdXNlID0gZmFsc2U7XG4gICAgICAgIHZhciBlcnJPcHRpb25zID0gZXh0ZW5kKHt9LCBvcHRzLCB7XG4gICAgICAgICAgICBjYXVzZU1lc3NhZ2U6IGNhdXNlTWVzc2FnZSxcbiAgICAgICAgICAgIG9yaWdNZXNzYWdlOiBjYXVzZU1lc3NhZ2VcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGhhcyhjYXVzZSwgJ2NvZGUnKSAmJiAhaGFzKGVyck9wdGlvbnMsICdjb2RlJykpIHtcbiAgICAgICAgICAgIGVyck9wdGlvbnMuY29kZSA9IGNhdXNlLmNvZGU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaGFzKGNhdXNlLCAnZXJybm8nKSAmJiAhaGFzKGVyck9wdGlvbnMsICdlcnJubycpKSB7XG4gICAgICAgICAgICBlcnJPcHRpb25zLmVycm5vID0gY2F1c2UuZXJybm87XG4gICAgICAgICAgICBub2RlQ2F1c2UgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGhhcyhjYXVzZSwgJ3N5c2NhbGwnKSAmJiAhaGFzKGVyck9wdGlvbnMsICdzeXNjYWxsJykpIHtcbiAgICAgICAgICAgIGVyck9wdGlvbnMuc3lzY2FsbCA9IGNhdXNlLnN5c2NhbGw7XG4gICAgICAgICAgICBub2RlQ2F1c2UgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIGNhdXNlVHlwZSA9IGNhdXNlLnR5cGU7XG4gICAgICAgIGlmICghY2F1c2VUeXBlICYmIG5vZGVDYXVzZSkge1xuICAgICAgICAgICAgY2F1c2VUeXBlID0gJ2Vycm9yLndyYXBwZWQtaW8uJyArXG4gICAgICAgICAgICAgICAgKGNhdXNlLnN5c2NhbGwgfHwgJ3Vua25vd24nKSArICcuJyArXG4gICAgICAgICAgICAgICAgKGNhdXNlLmVycm5vIHx8ICd1bmtub3duJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYXVzZVR5cGUgPSAnZXJyb3Iud3JhcHBlZC11bmtub3duJztcbiAgICAgICAgfVxuXG4gICAgICAgIGVyck9wdGlvbnMuZnVsbFR5cGUgPSBvcHRpb25zLnR5cGUgKyAnfiF+JyArXG4gICAgICAgICAgICAoY2F1c2UuZnVsbFR5cGUgfHwgY2F1c2UudHlwZSB8fCBjYXVzZVR5cGUpO1xuXG4gICAgICAgIHZhciBlcnIgPSBjcmVhdGVUeXBlZEVycm9yKGVyck9wdGlvbnMpO1xuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlcnIsICdjYXVzZScsIHtcbiAgICAgICAgICAgIHZhbHVlOiBjYXVzZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZXJyO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gaGFzKG9iaiwga2V5KSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSk7XG59XG5cbmZ1bmN0aW9uIGlzRXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuIG9iamVjdFRvU3RyaW5nLmNhbGwoZXJyKSA9PT0gRVJST1JfVFlQRTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/error/wrapped.js\n");

/***/ })

};
;