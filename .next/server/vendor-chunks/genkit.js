"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/genkit";
exports.ids = ["vendor-chunks/genkit"];
exports.modules = {

/***/ "(action-browser)/./node_modules/genkit/lib/common.js":
/*!*******************************************!*\
  !*** ./node_modules/genkit/lib/common.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar common_exports = {};\n__export(common_exports, {\n  BaseDataPointSchema: () => import_ai.BaseDataPointSchema,\n  Chat: () => import_chat.Chat,\n  Document: () => import_ai.Document,\n  DocumentDataSchema: () => import_ai.DocumentDataSchema,\n  GENKIT_CLIENT_HEADER: () => import_core.GENKIT_CLIENT_HEADER,\n  GENKIT_VERSION: () => import_core.GENKIT_VERSION,\n  GenerationBlockedError: () => import_ai.GenerationBlockedError,\n  GenerationCommonConfigSchema: () => import_ai.GenerationCommonConfigSchema,\n  GenerationResponseError: () => import_ai.GenerationResponseError,\n  GenkitError: () => import_core.GenkitError,\n  LlmResponseSchema: () => import_ai.LlmResponseSchema,\n  LlmStatsSchema: () => import_ai.LlmStatsSchema,\n  Message: () => import_ai.Message,\n  MessageSchema: () => import_ai.MessageSchema,\n  ModelRequestSchema: () => import_ai.ModelRequestSchema,\n  ModelResponseSchema: () => import_ai.ModelResponseSchema,\n  PartSchema: () => import_ai.PartSchema,\n  ReflectionServer: () => import_core.ReflectionServer,\n  RoleSchema: () => import_ai.RoleSchema,\n  Session: () => import_session.Session,\n  StatusCodes: () => import_core.StatusCodes,\n  StatusSchema: () => import_core.StatusSchema,\n  ToolCallSchema: () => import_ai.ToolCallSchema,\n  ToolInterruptError: () => import_ai.ToolInterruptError,\n  ToolSchema: () => import_ai.ToolSchema,\n  UserFacingError: () => import_core.UserFacingError,\n  defineJsonSchema: () => import_core.defineJsonSchema,\n  defineSchema: () => import_core.defineSchema,\n  embedderActionMetadata: () => import_ai.embedderActionMetadata,\n  embedderRef: () => import_ai.embedderRef,\n  evaluatorRef: () => import_ai.evaluatorRef,\n  getCurrentEnv: () => import_core.getCurrentEnv,\n  getStreamingCallback: () => import_core.getStreamingCallback,\n  indexerRef: () => import_ai.indexerRef,\n  isDevEnv: () => import_core.isDevEnv,\n  modelActionMetadata: () => import_ai.modelActionMetadata,\n  modelRef: () => import_ai.modelRef,\n  rerankerRef: () => import_ai.rerankerRef,\n  retrieverRef: () => import_ai.retrieverRef,\n  runWithStreamingCallback: () => import_core.runWithStreamingCallback,\n  z: () => import_core.z\n});\nmodule.exports = __toCommonJS(common_exports);\nvar import_ai = __webpack_require__(/*! @genkit-ai/ai */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/index.js\");\nvar import_chat = __webpack_require__(/*! @genkit-ai/ai/chat */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/chat.js\");\nvar import_session = __webpack_require__(/*! @genkit-ai/ai/session */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/session.js\");\nvar import_core = __webpack_require__(/*! @genkit-ai/core */ \"(action-browser)/./node_modules/@genkit-ai/core/lib/index.js\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nZW5raXQvbGliL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixrQ0FBa0M7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw0RkFBNEY7QUFDekg7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELGtCQUFrQixhQUFhO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsaUZBQWU7QUFDdkMsa0JBQWtCLG1CQUFPLENBQUMscUZBQW9CO0FBQzlDLHFCQUFxQixtQkFBTyxDQUFDLDJGQUF1QjtBQUNwRCxrQkFBa0IsbUJBQU8sQ0FBQyxxRkFBaUI7QUFDM0M7QUFDQSxNQUFNLENBMENMO0FBQ0QiLCJzb3VyY2VzIjpbIi9ob21lL3Byb2plY3Qvbm9kZV9tb2R1bGVzL2dlbmtpdC9saWIvY29tbW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX190b0NvbW1vbkpTID0gKG1vZCkgPT4gX19jb3B5UHJvcHMoX19kZWZQcm9wKHt9LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KSwgbW9kKTtcbnZhciBjb21tb25fZXhwb3J0cyA9IHt9O1xuX19leHBvcnQoY29tbW9uX2V4cG9ydHMsIHtcbiAgQmFzZURhdGFQb2ludFNjaGVtYTogKCkgPT4gaW1wb3J0X2FpLkJhc2VEYXRhUG9pbnRTY2hlbWEsXG4gIENoYXQ6ICgpID0+IGltcG9ydF9jaGF0LkNoYXQsXG4gIERvY3VtZW50OiAoKSA9PiBpbXBvcnRfYWkuRG9jdW1lbnQsXG4gIERvY3VtZW50RGF0YVNjaGVtYTogKCkgPT4gaW1wb3J0X2FpLkRvY3VtZW50RGF0YVNjaGVtYSxcbiAgR0VOS0lUX0NMSUVOVF9IRUFERVI6ICgpID0+IGltcG9ydF9jb3JlLkdFTktJVF9DTElFTlRfSEVBREVSLFxuICBHRU5LSVRfVkVSU0lPTjogKCkgPT4gaW1wb3J0X2NvcmUuR0VOS0lUX1ZFUlNJT04sXG4gIEdlbmVyYXRpb25CbG9ja2VkRXJyb3I6ICgpID0+IGltcG9ydF9haS5HZW5lcmF0aW9uQmxvY2tlZEVycm9yLFxuICBHZW5lcmF0aW9uQ29tbW9uQ29uZmlnU2NoZW1hOiAoKSA9PiBpbXBvcnRfYWkuR2VuZXJhdGlvbkNvbW1vbkNvbmZpZ1NjaGVtYSxcbiAgR2VuZXJhdGlvblJlc3BvbnNlRXJyb3I6ICgpID0+IGltcG9ydF9haS5HZW5lcmF0aW9uUmVzcG9uc2VFcnJvcixcbiAgR2Vua2l0RXJyb3I6ICgpID0+IGltcG9ydF9jb3JlLkdlbmtpdEVycm9yLFxuICBMbG1SZXNwb25zZVNjaGVtYTogKCkgPT4gaW1wb3J0X2FpLkxsbVJlc3BvbnNlU2NoZW1hLFxuICBMbG1TdGF0c1NjaGVtYTogKCkgPT4gaW1wb3J0X2FpLkxsbVN0YXRzU2NoZW1hLFxuICBNZXNzYWdlOiAoKSA9PiBpbXBvcnRfYWkuTWVzc2FnZSxcbiAgTWVzc2FnZVNjaGVtYTogKCkgPT4gaW1wb3J0X2FpLk1lc3NhZ2VTY2hlbWEsXG4gIE1vZGVsUmVxdWVzdFNjaGVtYTogKCkgPT4gaW1wb3J0X2FpLk1vZGVsUmVxdWVzdFNjaGVtYSxcbiAgTW9kZWxSZXNwb25zZVNjaGVtYTogKCkgPT4gaW1wb3J0X2FpLk1vZGVsUmVzcG9uc2VTY2hlbWEsXG4gIFBhcnRTY2hlbWE6ICgpID0+IGltcG9ydF9haS5QYXJ0U2NoZW1hLFxuICBSZWZsZWN0aW9uU2VydmVyOiAoKSA9PiBpbXBvcnRfY29yZS5SZWZsZWN0aW9uU2VydmVyLFxuICBSb2xlU2NoZW1hOiAoKSA9PiBpbXBvcnRfYWkuUm9sZVNjaGVtYSxcbiAgU2Vzc2lvbjogKCkgPT4gaW1wb3J0X3Nlc3Npb24uU2Vzc2lvbixcbiAgU3RhdHVzQ29kZXM6ICgpID0+IGltcG9ydF9jb3JlLlN0YXR1c0NvZGVzLFxuICBTdGF0dXNTY2hlbWE6ICgpID0+IGltcG9ydF9jb3JlLlN0YXR1c1NjaGVtYSxcbiAgVG9vbENhbGxTY2hlbWE6ICgpID0+IGltcG9ydF9haS5Ub29sQ2FsbFNjaGVtYSxcbiAgVG9vbEludGVycnVwdEVycm9yOiAoKSA9PiBpbXBvcnRfYWkuVG9vbEludGVycnVwdEVycm9yLFxuICBUb29sU2NoZW1hOiAoKSA9PiBpbXBvcnRfYWkuVG9vbFNjaGVtYSxcbiAgVXNlckZhY2luZ0Vycm9yOiAoKSA9PiBpbXBvcnRfY29yZS5Vc2VyRmFjaW5nRXJyb3IsXG4gIGRlZmluZUpzb25TY2hlbWE6ICgpID0+IGltcG9ydF9jb3JlLmRlZmluZUpzb25TY2hlbWEsXG4gIGRlZmluZVNjaGVtYTogKCkgPT4gaW1wb3J0X2NvcmUuZGVmaW5lU2NoZW1hLFxuICBlbWJlZGRlckFjdGlvbk1ldGFkYXRhOiAoKSA9PiBpbXBvcnRfYWkuZW1iZWRkZXJBY3Rpb25NZXRhZGF0YSxcbiAgZW1iZWRkZXJSZWY6ICgpID0+IGltcG9ydF9haS5lbWJlZGRlclJlZixcbiAgZXZhbHVhdG9yUmVmOiAoKSA9PiBpbXBvcnRfYWkuZXZhbHVhdG9yUmVmLFxuICBnZXRDdXJyZW50RW52OiAoKSA9PiBpbXBvcnRfY29yZS5nZXRDdXJyZW50RW52LFxuICBnZXRTdHJlYW1pbmdDYWxsYmFjazogKCkgPT4gaW1wb3J0X2NvcmUuZ2V0U3RyZWFtaW5nQ2FsbGJhY2ssXG4gIGluZGV4ZXJSZWY6ICgpID0+IGltcG9ydF9haS5pbmRleGVyUmVmLFxuICBpc0RldkVudjogKCkgPT4gaW1wb3J0X2NvcmUuaXNEZXZFbnYsXG4gIG1vZGVsQWN0aW9uTWV0YWRhdGE6ICgpID0+IGltcG9ydF9haS5tb2RlbEFjdGlvbk1ldGFkYXRhLFxuICBtb2RlbFJlZjogKCkgPT4gaW1wb3J0X2FpLm1vZGVsUmVmLFxuICByZXJhbmtlclJlZjogKCkgPT4gaW1wb3J0X2FpLnJlcmFua2VyUmVmLFxuICByZXRyaWV2ZXJSZWY6ICgpID0+IGltcG9ydF9haS5yZXRyaWV2ZXJSZWYsXG4gIHJ1bldpdGhTdHJlYW1pbmdDYWxsYmFjazogKCkgPT4gaW1wb3J0X2NvcmUucnVuV2l0aFN0cmVhbWluZ0NhbGxiYWNrLFxuICB6OiAoKSA9PiBpbXBvcnRfY29yZS56XG59KTtcbm1vZHVsZS5leHBvcnRzID0gX190b0NvbW1vbkpTKGNvbW1vbl9leHBvcnRzKTtcbnZhciBpbXBvcnRfYWkgPSByZXF1aXJlKFwiQGdlbmtpdC1haS9haVwiKTtcbnZhciBpbXBvcnRfY2hhdCA9IHJlcXVpcmUoXCJAZ2Vua2l0LWFpL2FpL2NoYXRcIik7XG52YXIgaW1wb3J0X3Nlc3Npb24gPSByZXF1aXJlKFwiQGdlbmtpdC1haS9haS9zZXNzaW9uXCIpO1xudmFyIGltcG9ydF9jb3JlID0gcmVxdWlyZShcIkBnZW5raXQtYWkvY29yZVwiKTtcbi8vIEFubm90YXRlIHRoZSBDb21tb25KUyBleHBvcnQgbmFtZXMgZm9yIEVTTSBpbXBvcnQgaW4gbm9kZTpcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICBCYXNlRGF0YVBvaW50U2NoZW1hLFxuICBDaGF0LFxuICBEb2N1bWVudCxcbiAgRG9jdW1lbnREYXRhU2NoZW1hLFxuICBHRU5LSVRfQ0xJRU5UX0hFQURFUixcbiAgR0VOS0lUX1ZFUlNJT04sXG4gIEdlbmVyYXRpb25CbG9ja2VkRXJyb3IsXG4gIEdlbmVyYXRpb25Db21tb25Db25maWdTY2hlbWEsXG4gIEdlbmVyYXRpb25SZXNwb25zZUVycm9yLFxuICBHZW5raXRFcnJvcixcbiAgTGxtUmVzcG9uc2VTY2hlbWEsXG4gIExsbVN0YXRzU2NoZW1hLFxuICBNZXNzYWdlLFxuICBNZXNzYWdlU2NoZW1hLFxuICBNb2RlbFJlcXVlc3RTY2hlbWEsXG4gIE1vZGVsUmVzcG9uc2VTY2hlbWEsXG4gIFBhcnRTY2hlbWEsXG4gIFJlZmxlY3Rpb25TZXJ2ZXIsXG4gIFJvbGVTY2hlbWEsXG4gIFNlc3Npb24sXG4gIFN0YXR1c0NvZGVzLFxuICBTdGF0dXNTY2hlbWEsXG4gIFRvb2xDYWxsU2NoZW1hLFxuICBUb29sSW50ZXJydXB0RXJyb3IsXG4gIFRvb2xTY2hlbWEsXG4gIFVzZXJGYWNpbmdFcnJvcixcbiAgZGVmaW5lSnNvblNjaGVtYSxcbiAgZGVmaW5lU2NoZW1hLFxuICBlbWJlZGRlckFjdGlvbk1ldGFkYXRhLFxuICBlbWJlZGRlclJlZixcbiAgZXZhbHVhdG9yUmVmLFxuICBnZXRDdXJyZW50RW52LFxuICBnZXRTdHJlYW1pbmdDYWxsYmFjayxcbiAgaW5kZXhlclJlZixcbiAgaXNEZXZFbnYsXG4gIG1vZGVsQWN0aW9uTWV0YWRhdGEsXG4gIG1vZGVsUmVmLFxuICByZXJhbmtlclJlZixcbiAgcmV0cmlldmVyUmVmLFxuICBydW5XaXRoU3RyZWFtaW5nQ2FsbGJhY2ssXG4gIHpcbn0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29tbW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/genkit/lib/common.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/genkit/lib/genkit.js":
/*!*******************************************!*\
  !*** ./node_modules/genkit/lib/genkit.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar genkit_exports = {};\n__export(genkit_exports, {\n  Genkit: () => Genkit,\n  __disableReflectionApi: () => __disableReflectionApi,\n  genkit: () => genkit\n});\nmodule.exports = __toCommonJS(genkit_exports);\nvar import_ai = __webpack_require__(/*! @genkit-ai/ai */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/index.js\");\nvar import_embedder = __webpack_require__(/*! @genkit-ai/ai/embedder */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/embedder.js\");\nvar import_evaluator = __webpack_require__(/*! @genkit-ai/ai/evaluator */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/evaluator.js\");\nvar import_formats = __webpack_require__(/*! @genkit-ai/ai/formats */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/formats/index.js\");\nvar import_model = __webpack_require__(/*! @genkit-ai/ai/model */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/model.js\");\nvar import_reranker = __webpack_require__(/*! @genkit-ai/ai/reranker */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/reranker.js\");\nvar import_retriever = __webpack_require__(/*! @genkit-ai/ai/retriever */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/retriever.js\");\nvar import_tool = __webpack_require__(/*! @genkit-ai/ai/tool */ \"(action-browser)/./node_modules/@genkit-ai/ai/lib/tool.js\");\nvar import_core = __webpack_require__(/*! @genkit-ai/core */ \"(action-browser)/./node_modules/@genkit-ai/core/lib/index.js\");\nvar import_logging = __webpack_require__(/*! ./logging.js */ \"(action-browser)/./node_modules/genkit/lib/logging.js\");\nvar import_registry = __webpack_require__(/*! ./registry.js */ \"(action-browser)/./node_modules/genkit/lib/registry.js\");\nclass Genkit {\n  /** Developer-configured options. */\n  options;\n  /** Registry instance that is exclusively modified by this Genkit instance. */\n  registry;\n  /** Reflection server for this registry. May be null if not started. */\n  reflectionServer = null;\n  /** List of flows that have been registered in this instance. */\n  flows = [];\n  get apiStability() {\n    return this.registry.apiStability;\n  }\n  constructor(options) {\n    this.options = options || {};\n    this.registry = new import_registry.Registry();\n    this.configure();\n    if ((0, import_core.isDevEnv)() && !disableReflectionApi) {\n      this.reflectionServer = new import_core.ReflectionServer(this.registry, {\n        configuredEnvs: [\"dev\"]\n      });\n      this.reflectionServer.start().catch((e) => import_logging.logger.error);\n    }\n  }\n  /**\n   * Defines and registers a flow function.\n   */\n  defineFlow(config, fn) {\n    const flow = (0, import_core.defineFlow)(this.registry, config, fn);\n    this.flows.push(flow);\n    return flow;\n  }\n  /**\n   * Defines and registers a tool.\n   *\n   * Tools can be passed to models by name or value during `generate` calls to be called automatically based on the prompt and situation.\n   */\n  defineTool(config, fn) {\n    return (0, import_ai.defineTool)(this.registry, config, fn);\n  }\n  /**\n   * Defines a dynamic tool. Dynamic tools are just like regular tools ({@link Genkit.defineTool}) but will not be registered in the\n   * Genkit registry and can be defined dynamically at runtime.\n   */\n  dynamicTool(config, fn) {\n    return (0, import_tool.dynamicTool)(this, config, fn);\n  }\n  /**\n   * Defines and registers a schema from a Zod schema.\n   *\n   * Defined schemas can be referenced by `name` in prompts in place of inline schemas.\n   */\n  defineSchema(name, schema) {\n    return (0, import_core.defineSchema)(this.registry, name, schema);\n  }\n  /**\n   * Defines and registers a schema from a JSON schema.\n   *\n   * Defined schemas can be referenced by `name` in prompts in place of inline schemas.\n   */\n  defineJsonSchema(name, jsonSchema) {\n    return (0, import_core.defineJsonSchema)(this.registry, name, jsonSchema);\n  }\n  /**\n   * Defines a new model and adds it to the registry.\n   */\n  defineModel(options, runner) {\n    return (0, import_model.defineModel)(this.registry, options, runner);\n  }\n  /**\n   * Looks up a prompt by `name` (and optionally `variant`). Can be used to lookup\n   * .prompt files or prompts previously defined with {@link Genkit.definePrompt}\n   */\n  prompt(name, options) {\n    return this.wrapExecutablePromptPromise(\n      (0, import_ai.prompt)(this.registry, name, {\n        ...options,\n        dir: this.options.promptDir ?? \"./prompts\"\n      })\n    );\n  }\n  wrapExecutablePromptPromise(promise) {\n    const executablePrompt = async (input, opts) => {\n      return (await promise)(input, opts);\n    };\n    executablePrompt.render = async (input, opts) => {\n      return (await promise).render(input, opts);\n    };\n    executablePrompt.stream = (input, opts) => {\n      return this.generateStream(\n        promise.then(\n          (action) => action.render(input, {\n            ...opts\n          })\n        )\n      );\n    };\n    executablePrompt.asTool = async () => {\n      return (await promise).asTool();\n    };\n    return executablePrompt;\n  }\n  /**\n   * Defines and registers a prompt based on a function.\n   *\n   * This is an alternative to defining and importing a .prompt file, providing\n   * the most advanced control over how the final request to the model is made.\n   *\n   * @param options - Prompt metadata including model, model params,\n   * input/output schemas, etc\n   * @param fn - A function that returns a {@link GenerateRequest}. Any config\n   * parameters specified by the {@link GenerateRequest} will take precedence\n   * over any parameters specified by `options`.\n   *\n   * ```ts\n   * const hi = ai.definePrompt(\n   *   {\n   *     name: 'hi',\n   *     input: {\n   *       schema: z.object({\n   *         name: z.string(),\n   *       }),\n   *     },\n   *     config: {\n   *       temperature: 1,\n   *     },\n   *   },\n   *   async (input) => {\n   *     return {\n   *       messages: [ { role: 'user', content: [{ text: `hi ${input.name}` }] } ],\n   *     };\n   *   }\n   * );\n   * const { text } = await hi({ name: 'Genkit' });\n   * ```\n   */\n  definePrompt(options, templateOrFn) {\n    if (templateOrFn) {\n      if (options.messages) {\n        throw new import_core.GenkitError({\n          status: \"INVALID_ARGUMENT\",\n          message: \"Cannot specify template/function argument and `options.messages` at the same time\"\n        });\n      }\n      if (typeof templateOrFn === \"string\") {\n        return (0, import_ai.definePrompt)(this.registry, {\n          ...options,\n          messages: templateOrFn\n        });\n      } else {\n        return (0, import_ai.definePrompt)(this.registry, {\n          ...options,\n          messages: async (input) => {\n            const response = await templateOrFn(input);\n            return response.messages;\n          }\n        });\n      }\n    }\n    return (0, import_ai.definePrompt)(this.registry, options);\n  }\n  /**\n   * Creates a retriever action for the provided {@link RetrieverFn} implementation.\n   */\n  defineRetriever(options, runner) {\n    return (0, import_retriever.defineRetriever)(this.registry, options, runner);\n  }\n  /**\n   * defineSimpleRetriever makes it easy to map existing data into documents that\n   * can be used for prompt augmentation.\n   *\n   * @param options Configuration options for the retriever.\n   * @param handler A function that queries a datastore and returns items from which to extract documents.\n   * @returns A Genkit retriever.\n   */\n  defineSimpleRetriever(options, handler) {\n    return (0, import_retriever.defineSimpleRetriever)(this.registry, options, handler);\n  }\n  /**\n   * Creates an indexer action for the provided {@link IndexerFn} implementation.\n   */\n  defineIndexer(options, runner) {\n    return (0, import_retriever.defineIndexer)(this.registry, options, runner);\n  }\n  /**\n   * Creates evaluator action for the provided {@link EvaluatorFn} implementation.\n   */\n  defineEvaluator(options, runner) {\n    return (0, import_evaluator.defineEvaluator)(this.registry, options, runner);\n  }\n  /**\n   * Creates embedder model for the provided {@link EmbedderFn} model implementation.\n   */\n  defineEmbedder(options, runner) {\n    return (0, import_embedder.defineEmbedder)(this.registry, options, runner);\n  }\n  /**\n   * create a handlebards helper (https://handlebarsjs.com/guide/block-helpers.html) to be used in dotpormpt templates.\n   */\n  defineHelper(name, fn) {\n    (0, import_ai.defineHelper)(this.registry, name, fn);\n  }\n  /**\n   * Creates a handlebars partial (https://handlebarsjs.com/guide/partials.html) to be used in dotpormpt templates.\n   */\n  definePartial(name, source) {\n    (0, import_ai.definePartial)(this.registry, name, source);\n  }\n  /**\n   *  Creates a reranker action for the provided {@link RerankerFn} implementation.\n   */\n  defineReranker(options, runner) {\n    return (0, import_reranker.defineReranker)(this.registry, options, runner);\n  }\n  /**\n   * Embeds the given `content` using the specified `embedder`.\n   */\n  embed(params) {\n    return (0, import_ai.embed)(this.registry, params);\n  }\n  /**\n   * A veneer for interacting with embedder models in bulk.\n   */\n  embedMany(params) {\n    return (0, import_embedder.embedMany)(this.registry, params);\n  }\n  /**\n   * Evaluates the given `dataset` using the specified `evaluator`.\n   */\n  evaluate(params) {\n    return (0, import_ai.evaluate)(this.registry, params);\n  }\n  /**\n   * Reranks documents from a {@link RerankerArgument} based on the provided query.\n   */\n  rerank(params) {\n    return (0, import_ai.rerank)(this.registry, params);\n  }\n  /**\n   * Indexes `documents` using the provided `indexer`.\n   */\n  index(params) {\n    return (0, import_retriever.index)(this.registry, params);\n  }\n  /**\n   * Retrieves documents from the `retriever` based on the provided `query`.\n   */\n  retrieve(params) {\n    return (0, import_ai.retrieve)(this.registry, params);\n  }\n  async generate(options) {\n    let resolvedOptions;\n    if (options instanceof Promise) {\n      resolvedOptions = await options;\n    } else if (typeof options === \"string\" || Array.isArray(options)) {\n      resolvedOptions = {\n        prompt: options\n      };\n    } else {\n      resolvedOptions = options;\n    }\n    return (0, import_ai.generate)(this.registry, resolvedOptions);\n  }\n  generateStream(options) {\n    if (typeof options === \"string\" || Array.isArray(options)) {\n      options = { prompt: options };\n    }\n    return (0, import_ai.generateStream)(this.registry, options);\n  }\n  run(name, funcOrInput, maybeFunc) {\n    if (maybeFunc) {\n      return (0, import_core.run)(name, funcOrInput, maybeFunc, this.registry);\n    }\n    return (0, import_core.run)(name, funcOrInput, this.registry);\n  }\n  /**\n   * Returns current action (or flow) invocation context. Can be used to access things like auth\n   * data set by HTTP server frameworks. If invoked outside of an action (e.g. flow or tool) will\n   * return `undefined`.\n   */\n  currentContext() {\n    return (0, import_core.getContext)(this);\n  }\n  /**\n   * Configures the Genkit instance.\n   */\n  configure() {\n    const activeRegistry = this.registry;\n    (0, import_model.defineGenerateAction)(activeRegistry);\n    (0, import_formats.configureFormats)(activeRegistry);\n    const plugins = [...this.options.plugins ?? []];\n    if (this.options.model) {\n      this.registry.registerValue(\n        \"defaultModel\",\n        \"defaultModel\",\n        this.options.model\n      );\n    }\n    if (this.options.promptDir !== null) {\n      (0, import_ai.loadPromptFolder)(\n        this.registry,\n        this.options.promptDir ?? \"./prompts\",\n        \"\"\n      );\n    }\n    plugins.forEach((plugin) => {\n      const loadedPlugin = plugin(this);\n      import_logging.logger.debug(`Registering plugin ${loadedPlugin.name}...`);\n      activeRegistry.registerPluginProvider(loadedPlugin.name, {\n        name: loadedPlugin.name,\n        async initializer() {\n          import_logging.logger.debug(`Initializing plugin ${loadedPlugin.name}:`);\n          await loadedPlugin.initializer();\n        },\n        async resolver(action, target) {\n          if (loadedPlugin.resolver) {\n            await loadedPlugin.resolver(action, target);\n          }\n        },\n        async listActions() {\n          if (loadedPlugin.listActions) {\n            return await loadedPlugin.listActions();\n          }\n          return [];\n        }\n      });\n    });\n  }\n  /**\n   * Stops all servers.\n   */\n  async stopServers() {\n    await this.reflectionServer?.stop();\n    this.reflectionServer = null;\n  }\n}\nfunction genkit(options) {\n  return new Genkit(options);\n}\nconst shutdown = async () => {\n  import_logging.logger.info(\"Shutting down all Genkit servers...\");\n  await import_core.ReflectionServer.stopAll();\n  process.exit(0);\n};\nprocess.on(\"SIGTERM\", shutdown);\nprocess.on(\"SIGINT\", shutdown);\nlet disableReflectionApi = false;\nfunction __disableReflectionApi() {\n  disableReflectionApi = true;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceMappingURL=genkit.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/genkit/lib/genkit.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/genkit/lib/index.mjs":
/*!*******************************************!*\
  !*** ./node_modules/genkit/lib/index.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Genkit: () => (/* reexport safe */ _genkit_js__WEBPACK_IMPORTED_MODULE_1__.Genkit),\n/* harmony export */   genkit: () => (/* reexport safe */ _genkit_js__WEBPACK_IMPORTED_MODULE_1__.genkit)\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"(action-browser)/./node_modules/genkit/lib/common.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _common_js__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"Genkit\",\"genkit\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _common_js__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _genkit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./genkit.js */ \"(action-browser)/./node_modules/genkit/lib/genkit.js\");\n/**\n * @license\n *\n * Copyright 2025 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nZW5raXQvbGliL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM0QjtBQUNpQjtBQUkzQztBQUNGIiwic291cmNlcyI6WyIvaG9tZS9wcm9qZWN0L25vZGVfbW9kdWxlcy9nZW5raXQvbGliL2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKlxuICogQ29weXJpZ2h0IDIwMjUgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuZXhwb3J0ICogZnJvbSBcIi4vY29tbW9uLmpzXCI7XG5pbXBvcnQgeyBHZW5raXQsIGdlbmtpdCB9IGZyb20gXCIuL2dlbmtpdC5qc1wiO1xuZXhwb3J0IHtcbiAgR2Vua2l0LFxuICBnZW5raXRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/genkit/lib/index.mjs\n");

/***/ }),

/***/ "(action-browser)/./node_modules/genkit/lib/logging.js":
/*!********************************************!*\
  !*** ./node_modules/genkit/lib/logging.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar logging_exports = {};\n__export(logging_exports, {\n  logger: () => import_logging.logger\n});\nmodule.exports = __toCommonJS(logging_exports);\nvar import_logging = __webpack_require__(/*! @genkit-ai/core/logging */ \"(action-browser)/./node_modules/@genkit-ai/core/lib/logging.js\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceMappingURL=logging.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nZW5raXQvbGliL2xvZ2dpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsa0NBQWtDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsNEZBQTRGO0FBQ3pIO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxrQkFBa0IsYUFBYTtBQUNuRjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxxQkFBcUIsbUJBQU8sQ0FBQywrRkFBeUI7QUFDdEQ7QUFDQSxNQUFNLENBRUw7QUFDRCIsInNvdXJjZXMiOlsiL2hvbWUvcHJvamVjdC9ub2RlX21vZHVsZXMvZ2Vua2l0L2xpYi9sb2dnaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcbnZhciBfX2dldE93blByb3BEZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBfX2dldE93blByb3BOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgX19leHBvcnQgPSAodGFyZ2V0LCBhbGwpID0+IHtcbiAgZm9yICh2YXIgbmFtZSBpbiBhbGwpXG4gICAgX19kZWZQcm9wKHRhcmdldCwgbmFtZSwgeyBnZXQ6IGFsbFtuYW1lXSwgZW51bWVyYWJsZTogdHJ1ZSB9KTtcbn07XG52YXIgX19jb3B5UHJvcHMgPSAodG8sIGZyb20sIGV4Y2VwdCwgZGVzYykgPT4ge1xuICBpZiAoZnJvbSAmJiB0eXBlb2YgZnJvbSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgZnJvbSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxuICAgICAgaWYgKCFfX2hhc093blByb3AuY2FsbCh0bywga2V5KSAmJiBrZXkgIT09IGV4Y2VwdClcbiAgICAgICAgX19kZWZQcm9wKHRvLCBrZXksIHsgZ2V0OiAoKSA9PiBmcm9tW2tleV0sIGVudW1lcmFibGU6ICEoZGVzYyA9IF9fZ2V0T3duUHJvcERlc2MoZnJvbSwga2V5KSkgfHwgZGVzYy5lbnVtZXJhYmxlIH0pO1xuICB9XG4gIHJldHVybiB0bztcbn07XG52YXIgX190b0NvbW1vbkpTID0gKG1vZCkgPT4gX19jb3B5UHJvcHMoX19kZWZQcm9wKHt9LCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KSwgbW9kKTtcbnZhciBsb2dnaW5nX2V4cG9ydHMgPSB7fTtcbl9fZXhwb3J0KGxvZ2dpbmdfZXhwb3J0cywge1xuICBsb2dnZXI6ICgpID0+IGltcG9ydF9sb2dnaW5nLmxvZ2dlclxufSk7XG5tb2R1bGUuZXhwb3J0cyA9IF9fdG9Db21tb25KUyhsb2dnaW5nX2V4cG9ydHMpO1xudmFyIGltcG9ydF9sb2dnaW5nID0gcmVxdWlyZShcIkBnZW5raXQtYWkvY29yZS9sb2dnaW5nXCIpO1xuLy8gQW5ub3RhdGUgdGhlIENvbW1vbkpTIGV4cG9ydCBuYW1lcyBmb3IgRVNNIGltcG9ydCBpbiBub2RlOlxuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gIGxvZ2dlclxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dnaW5nLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/genkit/lib/logging.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/genkit/lib/registry.js":
/*!*********************************************!*\
  !*** ./node_modules/genkit/lib/registry.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar registry_exports = {};\n__export(registry_exports, {\n  Registry: () => import_registry.Registry\n});\nmodule.exports = __toCommonJS(registry_exports);\nvar import_registry = __webpack_require__(/*! @genkit-ai/core/registry */ \"(action-browser)/./node_modules/@genkit-ai/core/lib/registry.js\");\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceMappingURL=registry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9nZW5raXQvbGliL3JlZ2lzdHJ5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGtDQUFrQztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQSxvREFBb0Qsa0JBQWtCLGFBQWE7QUFDbkY7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0Esc0JBQXNCLG1CQUFPLENBQUMsaUdBQTBCO0FBQ3hEO0FBQ0EsTUFBTSxDQUVMO0FBQ0QiLCJzb3VyY2VzIjpbIi9ob21lL3Byb2plY3Qvbm9kZV9tb2R1bGVzL2dlbmtpdC9saWIvcmVnaXN0cnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xudmFyIF9fZ2V0T3duUHJvcE5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG52YXIgX19oYXNPd25Qcm9wID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBfX2V4cG9ydCA9ICh0YXJnZXQsIGFsbCkgPT4ge1xuICBmb3IgKHZhciBuYW1lIGluIGFsbClcbiAgICBfX2RlZlByb3AodGFyZ2V0LCBuYW1lLCB7IGdldDogYWxsW25hbWVdLCBlbnVtZXJhYmxlOiB0cnVlIH0pO1xufTtcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XG4gIGlmIChmcm9tICYmIHR5cGVvZiBmcm9tID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBmcm9tID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBmb3IgKGxldCBrZXkgb2YgX19nZXRPd25Qcm9wTmFtZXMoZnJvbSkpXG4gICAgICBpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KVxuICAgICAgICBfX2RlZlByb3AodG8sIGtleSwgeyBnZXQ6ICgpID0+IGZyb21ba2V5XSwgZW51bWVyYWJsZTogIShkZXNjID0gX19nZXRPd25Qcm9wRGVzYyhmcm9tLCBrZXkpKSB8fCBkZXNjLmVudW1lcmFibGUgfSk7XG4gIH1cbiAgcmV0dXJuIHRvO1xufTtcbnZhciBfX3RvQ29tbW9uSlMgPSAobW9kKSA9PiBfX2NvcHlQcm9wcyhfX2RlZlByb3Aoe30sIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pLCBtb2QpO1xudmFyIHJlZ2lzdHJ5X2V4cG9ydHMgPSB7fTtcbl9fZXhwb3J0KHJlZ2lzdHJ5X2V4cG9ydHMsIHtcbiAgUmVnaXN0cnk6ICgpID0+IGltcG9ydF9yZWdpc3RyeS5SZWdpc3RyeVxufSk7XG5tb2R1bGUuZXhwb3J0cyA9IF9fdG9Db21tb25KUyhyZWdpc3RyeV9leHBvcnRzKTtcbnZhciBpbXBvcnRfcmVnaXN0cnkgPSByZXF1aXJlKFwiQGdlbmtpdC1haS9jb3JlL3JlZ2lzdHJ5XCIpO1xuLy8gQW5ub3RhdGUgdGhlIENvbW1vbkpTIGV4cG9ydCBuYW1lcyBmb3IgRVNNIGltcG9ydCBpbiBub2RlOlxuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gIFJlZ2lzdHJ5XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZ2lzdHJ5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/genkit/lib/registry.js\n");

/***/ })

};
;